name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

# Environment variables available to all jobs and steps
env:
  RESOURCE_GROUP: "rg-cicd-project"
  ACR_NAME: "containerapp060925"      # Your Azure Container Registry name
  ACA_NAME: "aca-cicd-project-app"    # Your Azure Container App name
  IMAGE_NAME: "python-hello-world"    # The name for your container image

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Check out your repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Log in to Azure using the Service Principal secret
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Log in to your Azure Container Registry (ACR) using Admin credentials
      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_NAME }} --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}

      # 4. Build and push the Docker image to ACR
      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 5. Update the Azure Container App to use the new image
      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name ${{ env.ACA_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --registry-server ${{ env.ACR_NAME }}.azurecr.io \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}
