name: Build and Deploy to Azure Container Apps

# Trigger this workflow on a push to the main branch
on:
  push:
    branches:
      - main

# Environment variables available to all jobs
env:
  RESOURCE_GROUP: "rg-cicd-project-8599"         # ⬅️ UPDATE THIS
  ACR_NAME: "acrproject8599"                     # ⬅️ UPDATE THIS
  CONTAINER_APP_NAME: "app-cicd-project-8599"    # ⬅️ UPDATE THIS
  IMAGE_NAME: "my-app"                            # Can be any name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out your repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Log in to Azure using the secret
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Log in to Azure Container Registry
      - name: Log in to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
        # Note: The azure/login action creates temporary ACR secrets (ACR_USERNAME, ACR_PASSWORD) for this step

      # 4. Build and push the Docker image
      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 5. Deploy the image to Azure Container Apps
      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          targetPort: 8000 # The port your app runs on inside the container
          ingress: "external" # Make the app accessible from the internet
